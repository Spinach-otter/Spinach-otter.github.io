<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo+Github发布个人博客</title>
      <link href="/2023/07/06/hexo-github-fa-bu-ge-ren-bo-ke/"/>
      <url>/2023/07/06/hexo-github-fa-bu-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo框架-GitHub实现静态博客"><a href="#hexo框架-GitHub实现静态博客" class="headerlink" title="hexo框架+GitHub实现静态博客"></a>hexo框架+GitHub实现静态博客</h1><h2 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h2><h3 id="Node-js安装"><a href="#Node-js安装" class="headerlink" title="Node.js安装"></a>Node.js安装</h3><p>因为hexo是基于node.js的框架，所以先下载安装好node.js环境。</p><p><a href="https://nodejs.org/zh-cn/">node.js官网下载长期版本</a></p><pre class=" language-shell"><code class="language-shell">使用下列shell命令检测node.js是否安装成功node -vterminal终端返回： v18.13.0 类似的版本号</code></pre><h3 id="hexo安装使用"><a href="#hexo安装使用" class="headerlink" title="hexo安装使用"></a>hexo安装使用</h3><p>hexo框架中需要下载一些依赖包，但是npm镜像国外的所以下载超级慢。所以先把npm的镜像设置为淘宝的</p><pre class=" language-shell"><code class="language-shell">注意：如果使用npm时，一直有error说明权限不够。解决办法为在所有的npm命令前面加上sudo，变成超级管理清空代理npm config set proxy null如果报错就换成超级管理身份sudo npm config set proxy null清空缓存npm cache clean --force重新设置镜像npm config set registry https://registry.npm.taobao.org</code></pre><p> 用cd命令进入你要安装hexo的目录路径</p><pre class=" language-shell"><code class="language-shell">例如：cd /User/Spinach/Desktop/website/bolg</code></pre><p>安装hexo指令</p><pre class=" language-shell"><code class="language-shell">sudo npm install hexo-cli -g</code></pre><p>初始化hexo博客框架</p><pre class=" language-shell"><code class="language-shell">hexo init blog</code></pre><p>开始运行hexo</p><pre class=" language-shell"><code class="language-shell">使用指令先安装依赖npm install在本地运行hexohexo start返回：hexo is running at http://localhost:4000打开任意浏览器搜索http://localhost:4000 即可看到hexo在本地发布的博客框架内容</code></pre><p>创建一篇新的博客</p><pre class=" language-shell"><code class="language-shell">hexo n "我的第一篇博客"返回：Created: /User/Spinach/Desktop/website/blog/source/_post/我的第一篇博客.md</code></pre><p>使用markdown语法把文件 “我的第一篇博客.md” 编辑好后，退回到安装hexo的目录重新发布</p><pre class=" language-shell"><code class="language-shell">退回安装了hexo的目录cd /User/Spinach/Desktop/website/blog清理一下hexo clean生成一下hexo g重新运行一下hexo s浏览器打开4000端口即可看到 “我的第一篇博客.md” 的内容</code></pre><p><strong>以上只是在本地发布了博客内容，没有发布在互联网上，可以借助GitHub pages为我们提供一个互联网访问入口</strong></p><h2 id="Git安装及链接"><a href="#Git安装及链接" class="headerlink" title="Git安装及链接"></a>Git安装及链接</h2><h3 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h3><p>Mac自带git工具，不需要额外下载</p><p><a href="https://git-scm.com/download/windows">Win下载git地址</a></p><pre class=" language-shell"><code class="language-shell">使用指令查看git是否下载成功git --version返回： git version 2.37.1(Apple Git-137.1) 类似的版本信息</code></pre><h3 id="SSH配置"><a href="#SSH配置" class="headerlink" title="SSH配置"></a>SSH配置</h3><p>需要使用SSH来链接本地与GitHub</p><p>所以先得到本地的SSH公钥</p><pre class=" language-shell"><code class="language-shell">ssh-keygen -t rsa -C "2947387166@qq.com" 上面邮箱换成自己注册Github的邮箱一路回车即可，如果提示是否重新生成，直接填y进入ssh目录下cd .ssh查看公钥cat id_rsa.pub把显示出的公钥信息复制好</code></pre><p>去Github填写本地的公钥，配置SSH</p><pre><code>进入github.com登入点击头像，选择settings进入点击SSH and GPG keys，然后点击New SSH KeyTitle框填自己GitHub上的用户名，key type默认，key将刚刚复制的ssh公钥黏贴进去，然后Add SSH Key</code></pre><h3 id="将hexo发布在GitHub仓库里"><a href="#将hexo发布在GitHub仓库里" class="headerlink" title="将hexo发布在GitHub仓库里"></a>将hexo发布在GitHub仓库里</h3><ol><li><p>在GitHub页面new一个repository，Repository name填写<code>username.github.io</code>；username是自己的GitHub用户名。然后直接Create Repository</p></li><li><p>将hexo界面发布到GitHub上。</p><p>打开blog文件夹下的_config.yml，修改以下三个地方：</p><p>一：title改成自己想要的文字，language改成zh-CN，author改成自己想要的发布者的昵称</p><p><img src="https://s3.bmp.ovh/imgs/2023/07/06/3581d0eb98f3a7c0.png"></p><p>二：16行左右的url改成<code>https://username.github.io</code>  ；username是GitHub的用户名</p><p>三：文件最后改成下面这样，repo用的格式<code>git@github.com:username/username.github.io.git</code></p><p><img src="https://s3.bmp.ovh/imgs/2023/07/06/bc1fa3c7825ce6ae.png"></p><p>修改完保存后退出</p></li><li><p>安装hexo中的git插件</p><pre class=" language-shell"><code class="language-shell">npm install hexo-deployer-git --save</code></pre></li><li><p>使用指令配置git的邮箱和用户名</p><pre class=" language-shell"><code class="language-shell">git config --global user.email "2947387166@qq.com"git config --global user.name "Spinach"邮箱和用户名都是自己GitHub上的</code></pre></li><li><p>将本地的hexo发布到GitHub上</p><pre class=" language-shell"><code class="language-shell">hexo d</code></pre></li></ol><p><strong>接下来就可以通过GitHub的这个仓库对应的浏览器链接访问自己的博客啦！</strong></p><h2 id="美化DIY"><a href="#美化DIY" class="headerlink" title="美化DIY"></a>美化DIY</h2><p>主题替换，在<a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 找到自己喜欢的博客主题进行安装。我自己用的是<a href="https://github.com/blinkfox/hexo-theme-matery">matery</a>。</p><p>把下载好的主题文件包，例如“matery” </p><p>放到安装hexo的目录下，比如“&#x2F;User&#x2F;Spinach&#x2F;Desktop&#x2F;website&#x2F;bolg”</p><p>修改&#x2F;User&#x2F;Spinach&#x2F;Desktop&#x2F;website&#x2F;bolg&#x2F;_config.yml文件中<code>theme: 下载的主题文件包名字</code></p><p><img src="https://s3.bmp.ovh/imgs/2023/07/06/92f20e86cd931369.png"></p><p>保存修改退出后，重新发布hexo即可</p><pre class=" language-shell"><code class="language-shell">运行hexo cleanhexo ghexo d</code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/07/05/hello-world/"/>
      <url>/2023/07/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
